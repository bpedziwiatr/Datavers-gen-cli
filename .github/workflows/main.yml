# This is a basic workflow to help you get started with Actions

name: Dataverse-gen-build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
       SolutionPath: DataverseGen.sln
       PackageName: ''

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        
      - name: Setup Nuget
        uses: Nuget/setup-nuget@v1.0.5
        
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
        
      - name: Restore dependencies
        run: nuget restore $SOLUTION
       
      - name: PowerShell script
        shell: pwsh
        run: |
           dotnet-gitversion
      - name: PowerShell script
        shell: pwsh
        run: |
            ./build.ps1
      - shell: pwsh
        run: |
          $gitv = dotnet-gitversion | ConvertFrom-JSON -ErrorAction stop
          echo $gitv.NuGetVersionV2
          $packagename = "DataverseGen-CLI_"+$gitv.NuGetVersionV2+".zip"
          echo $packagename
          echo $packagename | Out-File -FilePath $env:PackageName -Append
      - name: Step 3 - Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        with: 
          name: $PackageName
          path: publish
